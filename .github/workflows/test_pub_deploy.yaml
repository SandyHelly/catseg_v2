name: Test, Publish and Deploy

on:
  push:

jobs:

  run_tests:
    runs-on: [ ubuntu-latest ]
    env:
      AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run tests
        run: coverage run -m pytest
      - name: Tests report
        run: coverage report

  build_and_pub:
    needs: [run_tests]
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:latest -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:latest

  deploy:
    needs: [build_and_pub]
    runs-on: ubuntu-latest
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
      AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
    - uses: actions/checkout@master
    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: LOGIN, NAME, AWS_BUCKET, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION
        script: |
          sudo systemctl reload docker 
          sudo docker pull $LOGIN/$NAME:latest
          sudo docker stop $(sudo docker ps -a -q) 
          sudo docker run -e AWS_BUCKET=$AWS_BUCKET -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION -d -p 5000:5000 $LOGIN/$NAME:latest
          sudo docker container prune -f 
          sudo docker image prune -af